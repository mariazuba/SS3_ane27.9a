#V3.30.19.00;_safe;_compile_date:_Apr  4 2022;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.3
#_Stock_Synthesis_is_a_work_of_the_U.S._Government_and_is_not_subject_to_copyright_protection_in_the_United_States.
#_Foreign_copyrights_may_apply._See_copyright.txt_for_more_information.
#_User_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_User_info_available_at:https://vlab.noaa.gov/group/stock-synthesis
#_Source_code_at:_https://github.com/nmfs-stock-synthesis/stock-synthesis

#_Start_time: Fri Jan 20 09:27:44 2023
#_expected_values
#C data file for model showing different selectivities
#V3.30.19.00;_safe;_compile_date:_Apr  4 2022;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.3
2001 #_StartYr
2012 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
2 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
20 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
5 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=predator(M2) 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 1 1 1 0 Type1_size_logistic  # 1
 1 1 1 1 0 Type6_size_non-parametric  # 2
 1 1 1 1 0 Type24_size_double-normal  # 3
 1 1 1 1 0 Type25_size_exponential-logistic  # 4
 1 1 1 1 0 Type27_size_cubic-spline  # 5
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0.1
2001 1 1 1000 0.1
2002 1 1 1000 0.1
2003 1 1 1000 0.1
2004 1 1 1000 0.1
2005 1 1 1000 0.1
2006 1 1 1000 0.1
2007 1 1 1000 0.1
2008 1 1 1000 0.1
2009 1 1 999.999 0.1
2010 1 1 999.999 0.1
2011 1 1 999.996 0.1
2012 1 1 999.984 0.1
-999 1 2 0 0.1
2001 1 2 1000 0.1
2002 1 2 1000 0.1
2003 1 2 1000 0.1
2004 1 2 1000 0.1
2005 1 2 1000 0.1
2006 1 2 1000 0.1
2007 1 2 1000 0.1
2008 1 2 1000 0.1
2009 1 2 999.999 0.1
2010 1 2 999.999 0.1
2011 1 2 999.996 0.1
2012 1 2 999.984 0.1
-999 1 3 0 0.1
2001 1 3 1000 0.1
2002 1 3 1000 0.1
2003 1 3 1000 0.1
2004 1 3 1000 0.1
2005 1 3 1000 0.1
2006 1 3 1000 0.1
2007 1 3 1000 0.1
2008 1 3 1000 0.1
2009 1 3 999.999 0.1
2010 1 3 999.999 0.1
2011 1 3 999.996 0.1
2012 1 3 999.984 0.1
-999 1 4 0 0.1
2001 1 4 1000 0.1
2002 1 4 1000 0.1
2003 1 4 1000 0.1
2004 1 4 1000 0.1
2005 1 4 1000 0.1
2006 1 4 1000 0.1
2007 1 4 1000 0.1
2008 1 4 1000 0.1
2009 1 4 999.999 0.1
2010 1 4 999.999 0.1
2011 1 4 999.996 0.1
2012 1 4 999.984 0.1
-999 1 5 0 0.1
2001 1 5 1000 0.1
2002 1 5 1000 0.1
2003 1 5 1000 0.1
2004 1 5 1000 0.1
2005 1 5 1000 0.1
2006 1 5 1000 0.1
2007 1 5 1000 0.1
2008 1 5 1000 0.1
2009 1 5 999.999 0.1
2010 1 5 999.999 0.1
2011 1 5 999.996 0.1
2012 1 5 999.984 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Type1_size_logistic
2 1 0 0 # Type6_size_non-parametric
3 1 0 0 # Type24_size_double-normal
4 1 0 0 # Type25_size_exponential-logistic
5 1 0 0 # Type27_size_cubic-spline
#_year month index obs err
2001 7 1 9.99731 0.1 #_orig_obs: 10 Type1_size_logistic
2002 7 1 8.91916 0.1 #_orig_obs: 9 Type1_size_logistic
2003 7 1 7.92917 0.1 #_orig_obs: 8 Type1_size_logistic
2004 7 1 7.03688 0.1 #_orig_obs: 7 Type1_size_logistic
2005 7 1 6.23836 0.1 #_orig_obs: 6 Type1_size_logistic
2006 7 1 5.52223 0.1 #_orig_obs: 5 Type1_size_logistic
2007 7 1 4.87386 0.1 #_orig_obs: 5 Type1_size_logistic
2008 7 1 4.27799 0.1 #_orig_obs: 4 Type1_size_logistic
2009 7 1 3.71975 0.1 #_orig_obs: 4 Type1_size_logistic
2010 7 1 3.18481 0.1 #_orig_obs: 3.5 Type1_size_logistic
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note: only enter units and errtype for fleets with discard 
# note: discard data is the total for an entire season, so input of month here must be to a month in that season
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
2 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
98 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_combM+F: males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_ParmSelect:  parm number for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 0.001 1 0 0 0 1 #_fleet:1_Type1_size_logistic
-1 0.001 1 0 0 0 1 #_fleet:2_Type6_size_non-parametric
-1 0.001 1 0 0 0 1 #_fleet:3_Type24_size_double-normal
-1 0.001 1 0 0 0 1 #_fleet:4_Type25_size_exponential-logistic
-1 0.001 1 0 0 0 1 #_fleet:5_Type27_size_cubic-spline
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
33 #_N_LengthBins
 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90
#_yr month fleet sex part Nsamp datavector(female-male)
 2010 7 1 3 0 500  0.584679 0.667236 1.63999 4.97945 11.5354 18.5522 21.9226 20.9556 18.2999 16.3408 15.3329 14.4863 13.3975 12.2046 11.1061 10.1331 9.23072 8.3607 7.51329 6.68569 5.87419 5.07862 4.30625 3.57153 2.89336 2.29118 1.78052 1.36935 1.0565 0.832308 0.68142 0.586227 0.582455 0 1.06211 3.34946 9.3504 17.6518 22.8183 22.807 20.5891 18.758 17.3966 15.9002 14.2405 12.6552 11.2282 9.91758 8.68403 7.51378 6.40081 5.34424 4.35367 3.44913 2.65521 1.99296 1.47272 1.09056 0.829408 0.664053 0.567311 0.515122 0.489201 0.47736 0.472389 0.470903
 2010 7 2 3 0 500  0.763645 0.778874 1.78151 4.73211 11.1317 19.0902 22.1311 21.7429 19.9248 18.8342 18.7783 16.7939 14.1546 11.7636 9.77773 8.15935 6.90911 6.44635 5.96707 5.46898 4.94877 4.40583 3.79576 3.15879 2.57086 2.0488 1.60608 1.24962 0.978392 0.784033 0.653221 0.570693 0.567424 0 1.39666 3.69766 8.86334 17.025 23.4832 23.0242 21.3622 20.4247 20.0558 19.4771 16.5076 13.3689 10.8239 8.73762 7.00627 5.64713 4.96191 4.27416 3.59341 2.93894 2.33616 1.79026 1.33924 1.00792 0.781518 0.638164 0.554295 0.50905 0.486577 0.476312 0.472002 0.470714
 2010 7 3 3 0 500  0.846617 0.847436 2.00629 5.07159 10.6691 17.3854 22.0054 22.7196 21.0481 19.3536 18.1733 17.146 14.7866 10.6683 9.06879 8.2516 7.52452 6.8239 6.1415 5.47508 4.82161 4.18098 3.55904 2.9674 2.42131 1.9364 1.52519 1.1941 0.942175 0.761648 0.640145 0.563491 0.560454 0 1.60213 4.25073 9.53184 16.3067 21.3763 22.8932 22.3215 21.5768 20.6098 18.849 16.8535 13.9646 9.81965 8.1079 7.08469 6.14195 5.24569 4.39488 3.59722 2.86884 2.22954 1.69626 1.27734 0.969601 0.759312 0.62616 0.548259 0.506234 0.485361 0.475826 0.471823 0.470626
 2010 7 4 3 0 500  0.581512 0.639347 1.42115 4.22705 10.5742 18.8177 23.9141 23.6219 20.6898 18.2102 16.6908 15.3336 13.7593 12.1504 10.7156 9.47567 8.36832 7.35143 6.41146 5.54173 4.73524 3.98825 3.30273 2.68519 2.14412 1.68688 1.31694 1.03212 0.824495 0.681729 0.589404 0.533378 0.527786 0 0.978526 2.81101 7.86879 16.1593 23.1464 24.8806 23.2076 21.2093 19.3904 17.31 15.073 12.9963 11.1785 9.57067 8.12521 6.82039 5.6422 4.58171 3.63887 2.82122 2.13814 1.59449 1.18607 0.898578 0.710013 0.595253 0.53065 0.497085 0.481018 0.47394 0.471074 0.470225
 2010 7 5 3 0 500  0.861113 0.860729 2.02447 5.07343 10.6439 17.3884 22.1217 22.9477 21.2891 19.4818 17.9795 16.1585 13.9096 11.6842 9.83395 8.42436 7.40097 6.71592 6.04512 5.39002 4.74766 4.11791 3.50654 2.92495 2.38814 1.91148 1.50725 1.18179 0.934142 0.756683 0.637245 0.561893 0.558908 0 1.64196 4.29545 9.53546 16.2676 21.38 23.0143 22.5455 21.824 20.7465 18.6478 15.8833 13.138 10.7511 8.78756 7.23154 6.0426 5.16453 4.32818 3.54407 2.82807 2.19963 1.67541 1.26361 0.961103 0.754387 0.623498 0.54692 0.50561 0.485091 0.475718 0.471783 0.470607
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
15 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
1 #_N_ageerror_definitions
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5 11.5 12.5 13.5 14.5 15.5 16.5 17.5 18.5 19.5 20.5
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_combM+F: males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_ParmSelect:  parm number for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 0.001 0 0 0 0 1 #_fleet:1_Type1_size_logistic
-1 0.001 0 0 0 0 1 #_fleet:2_Type6_size_non-parametric
-1 0.001 0 0 0 0 1 #_fleet:3_Type24_size_double-normal
-1 0.001 0 0 0 0 1 #_fleet:4_Type25_size_exponential-logistic
-1 0.001 0 0 0 0 1 #_fleet:5_Type27_size_cubic-spline
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
2010  7 -1  3 0 1 -1 -1 250  41.5054 29.0829 17.6915 11.2596 7.48935 5.1373 3.6103 2.59323 1.90325 1.41911 1.16992 0.990765 0.83938 0.713318 1.92517 36.5469 29.6054 18.2598 11.347 7.37465 4.98489 3.47552 2.48726 1.82355 1.36068 1.10954 0.939813 0.803608 0.689501 1.86142
2010  7 -2  3 0 1 -1 -1 250  42.866 32.0968 17.5372 9.9018 6.27437 4.27875 3.0322 2.20316 1.63603 1.23439 1.02703 0.877096 0.74967 0.643125 1.67788 37.1586 32.257 19.7991 11.2541 6.72284 4.32462 2.95152 2.102 1.54705 1.16459 0.958039 0.818666 0.706706 0.61273 1.58674
2010  7 -3  3 0 1 -1 -1 250  42.7763 32.4274 17.4672 9.9211 6.28832 4.24691 2.97641 2.14432 1.58389 1.19202 0.990553 0.845865 0.723706 0.622031 1.59851 36.952 32.7084 19.8891 11.2096 6.71691 4.33829 2.96091 2.10278 1.54204 1.15711 0.949525 0.809993 0.698532 0.605456 1.55484
2010  7 -4  3 0 1 -1 -1 250  43.3942 31.4126 17.8077 10.5382 6.60915 4.33606 2.9515 2.0763 1.50716 1.12165 0.925199 0.786896 0.672775 0.579455 1.4294 36.3893 32.3126 19.3743 11.4238 7.07698 4.60426 3.11977 2.18878 1.58535 1.17691 0.957828 0.812041 0.69718 0.602471 1.53007
2010  7 4  3 0 1 26 30 50  13.4928 0.23083 0.053655 0.0488733 0.0485838 0.0485514 0.0485457 0.0485444 0.048544 0.0485438 0.0485438 0.0485437 0.0485437 0.0485437 0.0485437 33.9065 1.05641 0.0904549 0.051825 0.0489867 0.0486342 0.0485689 0.0485525 0.0485473 0.0485454 0.0485447 0.0485443 0.0485441 0.048544 0.0485444
2010  7 4  3 0 1 30 34 50  17.2878 0.652159 0.0723855 0.0502998 0.0487686 0.0485876 0.0485555 0.0485477 0.0485453 0.0485444 0.0485441 0.048544 0.0485439 0.0485438 0.048544 28.0998 2.49463 0.207784 0.0638389 0.0508255 0.0490344 0.0486838 0.0485934 0.0485645 0.0485535 0.0485493 0.0485472 0.048546 0.0485453 0.048548
2010  7 4  3 0 1 34 38 50  19.7305 2.18567 0.183764 0.0608762 0.0502965 0.0489049 0.0486432 0.048578 0.0485577 0.0485502 0.0485474 0.048546 0.0485452 0.0485447 0.0485464 19.9776 5.9108 0.724808 0.135204 0.0636598 0.052101 0.0496164 0.0489375 0.0487124 0.0486246 0.04859 0.0485731 0.0485633 0.0485572 0.0485807
2010  7 4  3 0 1 38 42 50  16.5927 6.70888 0.809413 0.141375 0.0639491 0.0520102 0.0495502 0.0489019 0.0486934 0.0486141 0.048584 0.048569 0.0485603 0.0485549 0.0485737 9.73667 11.5559 2.68164 0.53553 0.153368 0.0765739 0.0577139 0.052097 0.050123 0.0493212 0.0489972 0.0488354 0.0487406 0.0486803 0.048923
2010  7 4  3 0 1 42 46 50  6.80924 13.2529 3.14395 0.595639 0.160219 0.0769719 0.0574618 0.0518828 0.0499878 0.0492394 0.0489488 0.0488014 0.0487143 0.0486599 0.0488573 2.02 13.205 6.86986 2.02646 0.604016 0.223978 0.112549 0.075251 0.0610459 0.0549315 0.0523721 0.0510557 0.0502652 0.0497521 0.0519677
2010  7 4  3 0 1 46 50 50  1.0661 13.3262 7.32767 2.06388 0.581142 0.207383 0.103727 0.0706696 0.0585771 0.053543 0.0515269 0.0504761 0.0498402 0.049436 0.0509952 0.173961 6.94854 9.44543 4.69064 1.84508 0.744619 0.339534 0.181913 0.115269 0.0843184 0.070759 0.0635118 0.0590088 0.0560022 0.07027
2010  7 4  3 0 1 50 54 50  0.105911 7.13225 10.4581 4.92315 1.80144 0.682232 0.298302 0.15767 0.101105 0.0758927 0.0653895 0.059716 0.0561737 0.0538665 0.0635247 0.0510919 1.76399 7.27621 6.67181 3.77622 1.88707 0.952715 0.512569 0.300235 0.191675 0.141391 0.113185 0.0948741 0.0821957 0.150036
2010  7 4  3 0 1 54 58 50  0.049715 2.018 9.04746 7.75534 4.01011 1.84368 0.87044 0.44665 0.254808 0.161691 0.121003 0.0980173 0.0830808 0.0730439 0.119621 0.0485598 0.244938 3.11426 5.75925 4.98795 3.2664 1.95942 1.16765 0.715944 0.455386 0.326452 0.2497 0.197043 0.158874 0.395519
2010  7 4  3 0 1 58 62 50  0.0485522 0.330142 4.74873 8.04047 6.22237 3.67465 2.02298 1.12694 0.657157 0.403831 0.286787 0.21692 0.169197 0.135858 0.311271 0.0485437 0.0587027 0.759545 3.02239 4.23936 3.79472 2.8067 1.92731 1.29788 0.873557 0.646736 0.501456 0.394547 0.312451 0.920245
2010  7 4  3 0 1 62 66 50  0.0485437 0.0694848 1.56209 5.62429 6.86559 5.41758 3.6085 2.27858 1.43672 0.919031 0.664091 0.501282 0.382934 0.296202 0.826308 0.0485437 0.0487835 0.139949 1.00296 2.38086 3.02589 2.84164 2.30491 1.7456 1.27552 1.00048 0.807095 0.65106 0.522044 1.70343
2010  7 4  3 0 1 66 70 50  0.0485437 0.0493642 0.354356 2.72484 5.51484 6.02676 4.99269 3.66216 2.56102 1.75686 1.33146 1.03586 0.803298 0.622458 1.94175 0.0485437 0.0485463 0.0551477 0.240656 0.917995 1.70172 2.08173 2.03608 1.76424 1.42151 1.19771 1.01831 0.853255 0.702534 2.48576
2010  7 4  3 0 1 70 74 50  0.0485437 0.0485609 0.0879304 0.949538 3.30126 5.16992 5.46302 4.74715 3.74414 2.79902 2.25791 1.83729 1.46973 1.16163 3.93091 0.0485437 0.0485437 0.0488157 0.073183 0.269619 0.702772 1.13526 1.36122 1.36893 1.23121 1.12547 1.01714 0.892325 0.760369 2.90004
2010  7 4  3 0 1 74 78 50  0.0485437 0.0485439 0.051821 0.264623 1.51021 3.48793 4.81604 5.04908 4.55584 3.75594 3.25699 2.79633 2.32712 1.89263 6.89591 0.0485437 0.0485437 0.0485502 0.0505845 0.0874543 0.23606 0.482382 0.710288 0.836427 0.847624 0.847039 0.819018 0.75671 0.671084 2.75213
2010  7 4  3 0 1 78 82 50  0.0485437 0.0485437 0.0487225 0.086046 0.553156 1.89261 3.48829 4.48994 4.69752 4.31622 4.05695 3.70018 3.22248 2.71161 10.6503 0.0485437 0.0485437 0.0485438 0.0486545 0.0533573 0.0881028 0.180109 0.307663 0.419657 0.479835 0.525728 0.545859 0.533318 0.494386 2.16662
2010  7 4  3 0 1 82 86 50  0.0485437 0.0485437 0.0485502 0.0533466 0.185132 0.854799 2.12696 3.41466 4.1961 4.34044 4.4565 4.34436 3.97923 3.47912 14.7998 0.0485437 0.0485437 0.0485437 0.0485477 0.0489704 0.0548081 0.0794681 0.128993 0.189447 0.238481 0.283356 0.314695 0.325148 0.315767 1.45058
2010  7 4  3 0 1 86 90 50  0.0485437 0.0485437 0.0485439 0.0490075 0.0781818 0.342626 1.12506 2.27758 3.32651 3.91142 4.41995 4.63241 4.48344 4.08846 18.9578 0.0485437 0.0485437 0.0485437 0.0485438 0.0485714 0.0493047 0.0543032 0.0687956 0.0926521 0.118369 0.145898 0.169403 0.183182 0.185744 0.85156
2010  7 -5  3 0 1 -1 -1 250  42.9709 32.2176 17.5228 9.98878 6.28555 4.21888 2.94676 2.11966 1.56489 1.17791 0.979105 0.836461 0.716115 0.615994 1.57663 37.089 32.7038 19.7636 11.2445 6.76776 4.3611 2.96467 2.09844 1.5354 1.15062 0.943517 0.804602 0.693869 0.601552 1.53947
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
# -2 in yr will subtract mean for that env_var; -1 will subtract mean and divide by stddev (e.g. Z-score)
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

